{"version":3,"sources":["utils/axiosInstance.js","components/nav.js","components/spots.js","components/home.js","components/events.js","components/detail.js","components/signup.js","components/login.js","components/index.js","components/favorites.js","components/chat/methods.js","components/chat/RoomList.js","components/chat/ChatSession.js","components/chat/RoomUsers.js","components/chat/connect.js","components/resetPassword.js","components/sendReset.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","withCredentials","Nav","logoutHandler","get","process","then","localStorage","removeItem","props","history","push","className","type","data-toggle","data-target","id","to","onClick","this","Component","withRouter","Spots","changeHandler","e","searchQuery","target","value","showVenues","state","venues","filter","venue","metroArea","displayName","toLowerCase","indexOf","setState","filteredVenues","length","placeholder","onChange","map","country","Home","keywords","submitHandler","preventDefault","response","data","resultsPage","results","catch","error","console","log","onSubmit","name","Event","clickHandler","image","artistName","venueName","eventId","artistId","user","JSON","parse","getItem","favoritesCopy","favorites","Axios","method","url","_id","displayHeart","event","i","toggleHover","selectedEvents","hover","deleteHandler","clearHoverState","events","venueId","match","params","external","prevState","style","width","alt","src","performance","artist","onMouseEnter","onMouseLeave","color","userId","username","uri","class","Map","ReactMapboxGl","accessToken","Detail","details","start","date","time","location","lat","lng","popularity","href","website","queries","mobile","maxWidth","matches","center","containerStyle","height","layout","coordinates","Signup","email","password","post","message","setItem","stringify","action","for","Login","Base","handleResponse","profile","facebookId","handleError","appId","scope","onCompleted","onError","Favorite","favorite","handleInput","connectToRoom","currentUser","messages","subscribeToRoom","roomId","messageLimit","hooks","onMessage","onPresenceChanged","currentRoom","roomUsers","users","sort","a","presence","roomName","customData","isDirectMessage","userIds","rooms","connectToChatkit","trim","tokenProvider","Chatkit","TokenProvider","ChatManager","instanceLocator","connect","onAddedToRoom","room","showLogin","call","alert","sendMessage","newMessage","text","createPrivateRoom","isPrivateChatCreated","arr","join","Promise","resolve","createRoom","private","addUserIds","sendDM","RoomList","roomList","roomIcon","isPrivate","isRoomActive","key","ChatSession","format","Date","updatedAt","senderId","RoomUsers","title","Connect","isLoading","bind","Reset","token","pattern","required","SendReset","successMessage","PrivateRoute","component","loggedIn","rest","render","App","checkForUserStatus","navDisplay","path","pathname","exact","routeProps","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2b79543.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({withCredentials: true})","import React, { Component } from \"react\";\r\nimport axios from \"../utils/axiosInstance\"\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n\r\n    logoutHandler = () => {\r\n        axios.get(`${process.env.REACT_APP_API}/auth/logout`)\r\n        .then(()=>{\r\n            localStorage.removeItem(\"user\")\r\n            this.props.history.push(\"/auth/login\")\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg bg-primary navbar-dark\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse justify-content-center\" id=\"collapsibleNavbar\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link display-4 font-weight-bold\" to={\"/home\"}>Home |</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link display-4 font-weight-bold\" to={\"/favorites\"}>Favorites |</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link display-4 font-weight-bold\" to={\"/connect\"}>Connect |</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link display-4 font-weight-bold\" to={\"/\"} onClick={this.logoutHandler}>Logout</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Nav);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Nav from \"./nav\";\r\n\r\nclass Spots extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            venues: this.props.venues || [],\r\n            filteredVenues: []\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n          \r\n        let searchQuery = e.target.value;\r\n\r\n        var showVenues = (\r\n            this.state.venues.filter(venue => (\r\n                venue.metroArea.displayName.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1\r\n            ))\r\n        )\r\n\r\n        this.setState({\r\n            filteredVenues: showVenues\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            {this.state.filteredVenues.length > 0 ? \r\n                <div>\r\n                <Nav/>\r\n                <input  className=\"text-center d-block mx-auto my-3 border border-top-0 border-right-0 border-left-0\" type=\"text\" placeholder=\"Filter by city\" onChange={this.changeHandler}/>\r\n                {this.state.filteredVenues.map(venue=>(                \r\n                <div className=\"border border-top-0 border-right-0 border-left-0 my-3 p-3\">\r\n                    <h3 className=\"text-primary\">{venue.displayName}</h3>\r\n                    <p><span className=\"font-weight-bold mr-2\">Hosting city:</span>{venue.metroArea.displayName}, {venue.metroArea.country.displayName}</p>\r\n                    <Link to={`/events/${venue.id}`} className=\"btn btn-primary\">Check Events</Link>\r\n                </div>\r\n            ))}\r\n            </div>\r\n            :\r\n            <div>\r\n                <Nav/>\r\n                <input type=\"text\" className=\"text-center d-block mx-auto my-3 border-top-0 border-right-0 border-left-0\" placeholder=\"Filter by city\" onChange={this.changeHandler}/>\r\n                {this.state.venues && this.state.venues.map(venue=>(               \r\n                <div className=\"border border-top-0 border-right-0 border-left-0 my-3 p-3\">\r\n                    <h3 className=\"text-primary\">{venue.displayName}</h3>\r\n                    <p><span className=\"font-weight-bold mr-2\">Hosting city:</span>{venue.metroArea.displayName}, {venue.metroArea.country.displayName}</p>\r\n                    <Link to={`/events/${venue.id}`} className=\"btn btn-primary\">Check Events</Link>\r\n                </div>\r\n            ))}\r\n            </div>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Spots)","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spots from \"./spots\";\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            keywords: \"\",\r\n            venues: []\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            keywords: e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios.get(`https://api.songkick.com/api/3.0/search/venues.json?query=${this.state.keywords}&apikey=${process.env.REACT_APP_KEY}`)\r\n        .then(response=>{\r\n            debugger\r\n            this.setState({\r\n                venues: response.data.resultsPage.results.venue || []\r\n            })\r\n            \r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.venues.length > 0  ?\r\n                    <Spots venues={this.state.venues} /> :\r\n                    <div className=\"bg-img d-flex flex-column justify-content-center align-items-center mb-3\">\r\n                        <div className=\"main-txt text-white lead display-2 mb-2\">\r\n                            Search For Events Tailored To Your Taste\r\n                        </div>\r\n                        <form className=\"form-inline d-flex flex-column text-black font-weight-bold\" onSubmit={this.submitHandler}>\r\n                            <input type=\"text\" onChange={this.changeHandler} name=\"keywords\" placeholder=\"Enter keywords\" className=\"py-2 px-auto my-3\"></input>\r\n                            <button type=\"submit\" className=\"btn btn-danger btn-lg\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { Component } from \"react\";\r\nimport axios from \"axios\"\r\nimport Axios from \"../utils/axiosInstance\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Event extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            favorites: [],\r\n            hover: false,\r\n            selectedEvents: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        let venueId = this.props.match.params.id\r\n        \r\n        axios.get(`https://api.songkick.com/api/3.0/venues/${venueId}/calendar.json?apikey=${process.env.REACT_APP_KEY}`)\r\n        .then(external=>{\r\n            \r\n            Axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_API}/auth/favorites/${user._id}`\r\n            })\r\n            .then(response=>{\r\n                this.setState({\r\n                    favorites: response.data,\r\n                    events: external.data.resultsPage.results.event,\r\n\r\n                })\r\n            })\r\n            .catch(error=>console.log(error))\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState){\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n\r\n        Axios.get(`${process.env.REACT_APP_API}/auth/favorites/${user._id}`)\r\n        .then(response=>{\r\n            if(prevState.favorites !== response.data){\r\n                this.setState({\r\n                    favorites: response.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    clickHandler = (image, artistName, venueName, eventId, artistId) => {\r\n        \r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n\r\n        \r\n        let favoritesCopy = [...this.state.favorites]\r\n\r\n        favoritesCopy.push(eventId)\r\n\r\n        this.setState({\r\n            favorites: favoritesCopy\r\n            })\r\n\r\n        Axios({\r\n            method: \"GET\",\r\n            url: `${process.env.REACT_APP_API}/auth/add/${user._id}?image=${image}&artistName=${artistName}&venueName=${venueName}&eventId=${eventId}&artistId=${artistId}`\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    displayHeart = (event) => {\r\n        for(let i = 0; i < this.state.favorites.length; i++){\r\n            if(this.state.favorites[i].eventId === event.id){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    toggleHover = (eventId) => {\r\n        \r\n        Axios.get(`${process.env.REACT_APP_API}/auth/favorites/hover/${eventId}`)\r\n        .then(response=>{                     \r\n            this.setState({\r\n                selectedEvents: response.data,\r\n                hover: eventId\r\n            })\r\n        })\r\n        .catch(error=>{             \r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    deleteHandler = (eventId) => {\r\n        \r\n        let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n        Axios({\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_API}/auth/favorites/delete/${user._id}/${eventId}`\r\n        })\r\n        .then(response=>{\r\n            this.setState({\r\n                favorites: response.data\r\n            })\r\n        })\r\n        .catch(error=>console.log(error))\r\n    }\r\n\r\n    clearHoverState = () => {\r\n        this.setState({\r\n            hover: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div className=\"d-flex flex-wrap container\">\r\n            {!this.state.events ? \r\n                <div className=\"border bg-light border-primary text-white w-50 h-50 p-3 my-3\">\r\n                    <h1 class=\"oops\">Oops!<span>There are no events for the chosen venue...!!</span></h1><br></br>\r\n                    <Link className=\"btn btn-primary mt-3\" to=\"/home\">Take Me Back Please!!!</Link>\r\n                </div>\r\n            :\r\n            <>\r\n                {this.state.events.map(event=>(                    \r\n                    <div className=\"card m-3\" style={{width: \"330px\"}}>\r\n                        <img className=\"card-img-top\" alt=\"\" src={`https://images.sk-static.com/images/media/profile_images/artists/${event.performance[0].artist.id}/huge_avatar`}/>\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">{event.performance[0].artist.displayName}</h4>\r\n                            <p className=\"card-text\">{event.venue.displayName}</p>\r\n                            <Link to={`/event-details/${event.id}`} className=\"btn btn-primary\">Event Details</Link>\r\n                            {this.displayHeart(event) ? \r\n                            (\r\n                            <>\r\n                            <div onMouseEnter={()=>this.toggleHover(event.id)} onMouseLeave={this.clearHoverState} className=\"h-50\">\r\n                            <i onClick={()=>this.deleteHandler(event.id)} className=\"fa fa-heart float-right btn-lg\" style={{color: \"red\"}}></i>\r\n                            </div>\r\n                            {this.state.hover === event.id ? \r\n                            <div className=\"border w-75 mt-2 ml-3\">\r\n                                <h4>People with common interests!!</h4>\r\n                                {this.state.selectedEvents.map(event=>(                                    \r\n                                    <li className=\"lead font-weight-bold\">{event.userId.username}</li>\r\n                                ))}\r\n                            </div>                            \r\n                            : \"\"}\r\n                            </>\r\n                            )\r\n                            : <div className=\"h-50\"><i className=\"fa fa-heart float-right btn-lg\" style={{color: \"black\"}} name={event.id} onClick={() => {this.clickHandler(event.performance[0].artist.uri, event.performance[0].artist.displayName, event.venue.displayName, event.id, event.performance[0].artist.id)}}></i></div>}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                </>\r\n                }\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event","import React, { Component } from \"react\";\r\nimport axios from \"axios\"\r\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\r\nimport Media from \"react-media\";\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken:\r\n      'pk.eyJ1IjoibmloYXJpa2E5NTIxOCIsImEiOiJjazIzYmw2NDMxczVhM3B1Z3I1c2RmMXd2In0.IKDbblC0k7rWIvwpIohgsA'\r\n  });\r\n\r\nclass Detail extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            details: {\r\n                start: {\r\n                    date: \"\",\r\n                    time: \"\"\r\n                },\r\n                performance: [{\r\n                    artist: {}\r\n                }],\r\n                venue: {\r\n                    metroArea: {\r\n                        displayName: \"\",\r\n                        country: {}\r\n                    }\r\n                },\r\n                location: {}\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let eventId = this.props.match.params.id\r\n\r\n        axios.get(`https://api.songkick.com/api/3.0/events/${eventId}.json?apikey=${process.env.REACT_APP_KEY}`)\r\n        .then(response=>{\r\n            this.setState({\r\n                details: response.data.resultsPage.results.event\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        let lat = this.state.details.location.lat;\r\n        let lng = this.state.details.location.lng;\r\n\r\n        return(\r\n            <>\r\n            <div className=\"d-flex justify-content-around align-items-center detail-div\">\r\n                <img className=\"each\" src={`https://images.sk-static.com/images/media/profile_images/artists/${this.state.details.performance[0].artist.id}/huge_avatar`} alt=\"\"/>\r\n                <div className=\"bg-light text-dark p-4 d-flex flex-column justify-content-around\">\r\n                <div>\r\n                    <h2><strong>Event Name:</strong> {this.state.details.displayName}</h2>\r\n                    <h2><strong>Event Date:</strong> {this.state.details.start.date}</h2>\r\n                    <h2><strong>Popularity:</strong> {this.state.details.popularity}</h2>\r\n                    <h2><strong>Event Time:</strong> {this.state.details.start.time}</h2>\r\n                    <h2><strong>Event Hosted At:</strong> {this.state.details.venue.metroArea.displayName}, {this.state.details.venue.metroArea.country.displayName}</h2>\r\n                    <h2><strong>Website:</strong> <a href={this.state.details.venue.website} className=\"text-decoration-none\">{this.state.details.venue.website}</a></h2>\r\n                    </div>\r\n\r\n                    {/* {lat ?\r\n                    <Map\r\n                    center= {[lng, lat]}\r\n                    style=\"mapbox://styles/mapbox/streets-v9\"\r\n                    containerStyle={{\r\n                        height: '50vh',\r\n                        width: '45vw' \r\n                                    }}\r\n                    >\r\n                    <Layer type=\"symbol\" id=\"marker\" layout={{ 'icon-image': 'marker-15' }}>\r\n                        <Feature coordinates={[{lng}, {lat}]} />\r\n                    </Layer>\r\n                    </Map> : null} */}\r\n\r\n                    {lat ?\r\n                    <Media queries={{ mobile: {maxWidth: 640}}}>\r\n                        {matches => { \r\n                        console.log(matches.mobile)\r\n                            return matches.mobile ? (\r\n                                <Map      \r\n                                    center= {[lng, lat]}\r\n                                    style=\"mapbox://styles/mapbox/streets-v9\"\r\n                                    containerStyle={{\r\n                                        height: '50vh',\r\n                                        width: '80vw' \r\n                                                    }}\r\n                                    >\r\n                                    <Layer type=\"symbol\" id=\"marker\" layout={{ 'icon-image': 'marker-15' }}>\r\n                                        <Feature coordinates={[{lng}, {lat}]} />\r\n                                    </Layer>\r\n                                </Map>\r\n                            ) : (\r\n                                <Map      \r\n                                    center= {[lng, lat]}\r\n                                    style=\"mapbox://styles/mapbox/streets-v9\"\r\n                                    containerStyle={{\r\n                                        height: '50vh',\r\n                                        width: '45vw' \r\n                                                    }}\r\n                                    >\r\n                                    <Layer type=\"symbol\" id=\"marker\" layout={{ 'icon-image': 'marker-15' }}>\r\n                                        <Feature coordinates={[{lng}, {lat}]} />\r\n                                    </Layer>\r\n                                    </Map>\r\n                            )}}</Media>                    \r\n                    : null}\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail","import React, { Component } from \"react\";\r\nimport axios from \"../utils/axiosInstance\"\r\nimport {Link} from \"react-router-dom\"; \r\n\r\nclass Signup extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.post(`${process.env.REACT_APP_API}/auth/signup`, user)\r\n        .then((response) => {\r\n            if(response.data.message) {\r\n                this.setState({\r\n                    message: response.data.message\r\n                })\r\n            } else {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data))\r\n                this.props.user();\r\n                this.props.history.push(\"/home\")\r\n            }\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"d-flex flex-column align-items-center justify-content-center bg-info signup-div\">\r\n                {this.state.message ?<p className=\"border p-2 font-weight-bolder rounded border-white text-danger bg-white\">{this.state.message}</p> :  null}\r\n                <form action=\"/auth/signup\" method=\"POST\" className=\"border border-dark rounded d-flex flex-column align-items-between ml-3 mr-n3 p-3 bg-light\" onSubmit={this.submitHandler}>\r\n                    <h1>Come, Join Us!</h1>\r\n                    <div className=\"py-3\">\r\n                        <label for=\"username\">Username</label>\r\n                        <input type=\"text\" className=\"ml-3\" name=\"username\" onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div className=\"py-3\">\r\n                        <label for=\"email\">Email</label>\r\n                        <input type=\"email\" className=\"ml-3\" name=\"email\" onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div className=\"py-3\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" className=\"ml-3\" name=\"password\" onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary\">Create Account</button>\r\n                    </div>                    \r\n                    <p>Already got an account? <Link to=\"/auth/login\">Login</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from \"react\";\r\nimport axios from \"../utils/axiosInstance\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.post(`${process.env.REACT_APP_API}/auth/login`, user)\r\n        .then((response) => {\r\n            if(response.data.message){\r\n                this.setState({\r\n                    message: response.data.message\r\n                })\r\n            } else {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data))\r\n                this.props.user();\r\n                this.props.history.push(\"/home\")}\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"d-flex flex-column align-items-center justify-content-center login-div\">\r\n                {this.state.message ? <p className=\"text-danger p-2 bg-white font-weight-bolder border rounded border-white\">{this.state.message}</p> : null}\r\n                <form action=\"/auth/signup\" method=\"POST\" onSubmit={this.submitHandler} className=\"border border-dark rounded d-flex flex-column align-items-between ml-3 mr-n3 p-3 bg-light\">\r\n                    <h1 className=\"mb-3 pd-1\">Why wait, login!!</h1>\r\n                    <div>\r\n                        <label for=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" className=\"ml-3 mb-2\" onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\"  className=\"ml-3\" onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" className=\"btn btn-lg btn-primary\">Login</button>\r\n                    </div>\r\n                    <Link to=\"/auth/send-reset\">Forgot Password?</Link>\r\n                    </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FacebookProvider, LoginButton } from 'react-facebook';\r\nimport axios from \"../utils/axiosInstance\"\r\n\r\nclass Base extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleResponse = (data) => {\r\n        console.log(data)\r\n\r\n        let user = {\r\n            username: data.profile.name,\r\n            email: data.profile.email,\r\n            facebookId: data.profile.id\r\n        }\r\n    \r\n        axios.post(`${process.env.REACT_APP_API}/auth/fb-login`, user)\r\n        .then(response=>{\r\n           localStorage.setItem(\"user\", JSON.stringify(response.data))\r\n           this.props.user()\r\n           this.props.history.push(\"/home\")\r\n        })\r\n        .catch(error=>{\r\n            this.setState({error: error})\r\n        })\r\n    }\r\n     \r\n    handleError = (error) => {\r\n        this.setState({ error });\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"bg-img d-flex flex-column justify-content-center align-items-center\">\r\n                <div className=\"main-txt text-white lead display-2 mb-2\">\r\n                    Search For Events Tailored To Your Taste\r\n                </div>\r\n                <div className=\"mb-3\">                \r\n                    <Link to=\"/auth/signup\" className=\"btn btn-danger btn-lg mr-3\">Signup</Link>\r\n                    <Link to=\"/auth/login\" className=\"btn btn-danger btn-lg\">Login</Link>\r\n                </div>\r\n                <FacebookProvider appId=\"928765154159482\">\r\n                    <LoginButton\r\n                        scope=\"email\"\r\n                        onCompleted={this.handleResponse}\r\n                        onError={this.handleError}\r\n                    >\r\n                    <span className=\"btn btn-primary btn-lg\">Login via Facebook</span>\r\n                    </LoginButton>\r\n                </FacebookProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Base","import React, {Component} from \"react\";\r\nimport axios from \"../utils/axiosInstance\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Favorite extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            favorites: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n        axios({\r\n            method: \"GET\",\r\n            url: `${process.env.REACT_APP_API}/auth/favorites/${user._id}`\r\n        })\r\n        .then(response=>{\r\n            this.setState({\r\n                favorites: response.data\r\n            })\r\n        })\r\n        .catch(error=>console.log(error))\r\n    }\r\n\r\n    deleteHandler = (eventId) => {\r\n        let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${process.env.REACT_APP_API}/auth/favorites/delete/${user._id}/${eventId}`\r\n        })\r\n        .then(response=>{\r\n            this.setState({\r\n                favorites: response.data\r\n            })\r\n        })\r\n        .catch(error=>console.log(error))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"d-flex flex-wrap container\">\r\n            {this.state.favorites.map(favorite=>(\r\n                <div className=\"card m-3\" style={{width: \"330px\"}}>\r\n                        <img className=\"card-img-top\" alt=\"\" src={`https://images.sk-static.com/images/media/profile_images/artists/${favorite.artistId}/huge_avatar`}/>\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">{favorite.artistName}</h4>\r\n                            <p className=\"card-text\">{favorite.venueName}</p>\r\n                            <Link to={`/event-details/${favorite.eventId}`} className=\"btn btn-primary\">Event Details</Link>\r\n                            <button className=\"btn btn-primary float-right text-white\" onClick={()=>this.deleteHandler(favorite.eventId)}>Remove Favorite</button>\r\n                        </div>\r\n                </div>\r\n            ))\r\n        }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorite","import Chatkit from '@pusher/chatkit-client';\r\nimport axios from \"../../utils/axiosInstance\"\r\n\r\nfunction handleInput(event) {\r\n      const { value, name } = event.target;\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n}\r\n\r\nfunction connectToRoom(id = \"d1725b35-c95a-49e9-a454-b6be719a8acb\") {\r\n        const { currentUser } = this.state;\r\n  \r\n        this.setState({\r\n          messages: [],\r\n        });\r\n  \r\n        return currentUser\r\n          .subscribeToRoom({\r\n            roomId: `${id}`,\r\n            messageLimit: 100,\r\n            hooks: {\r\n                onMessage: message => {\r\n                    this.setState({\r\n                      messages: [...this.state.messages, message],\r\n                    });\r\n                },\r\n                onPresenceChanged: () => {\r\n                    const { currentRoom } = this.state;\r\n                    this.setState({\r\n                      roomUsers: currentRoom.users.sort(a => {\r\n                        if (a.presence.state === 'online') return -1;\r\n      \r\n                        return 1;\r\n                      }),\r\n                    });\r\n                },\r\n            },\r\n          })\r\n          .then(currentRoom => {\r\n            const roomName =\r\n              currentRoom.customData && currentRoom.customData.isDirectMessage\r\n                ? currentRoom.customData.userIds.filter(\r\n                    id => id !== currentUser.id\r\n                  )[0]\r\n                : currentRoom.name;\r\n  \r\n            this.setState({\r\n              currentRoom,\r\n              roomUsers: currentRoom.users,\r\n              rooms: currentUser.rooms,\r\n              roomName,\r\n            });\r\n          })\r\n          .catch(console.error);\r\n}\r\n\r\nfunction connectToChatkit(username) {      \r\n\r\n      if (username === null || username.trim() === '') {\r\n        alert('Invalid userId');\r\n        return;\r\n      }\r\n\r\n      axios\r\n        .post(`${process.env.REACT_APP_API}/users`, { username })\r\n        .then((response) => {\r\n          const username = response.data\r\n          const tokenProvider = new Chatkit.TokenProvider({\r\n            url: `${process.env.REACT_APP_API}/authenticate`,\r\n          });\r\n\r\n          const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: `${process.env.REACT_APP_CHATKIT_INSTANCE_LOCATOR}`,\r\n            userId: username,\r\n            tokenProvider,\r\n          });\r\n\r\n          return chatManager\r\n            .connect({\r\n              onAddedToRoom: room => {\r\n                const { rooms } = this.state;\r\n                this.setState({\r\n                  rooms: [...rooms, room],\r\n                });\r\n              },\r\n            })\r\n            .then(currentUser => {\r\n              this.setState(\r\n                {\r\n                  currentUser,\r\n                  showLogin: false,\r\n                  rooms: currentUser.rooms,\r\n                },\r\n                () => connectToRoom.call(this)\r\n              );\r\n            });\r\n        })\r\n        .catch(console.error);\r\n}\r\n\r\nfunction sendMessage(event) {\r\n    event.preventDefault();\r\n    const { newMessage, currentUser, currentRoom } = this.state;\r\n\r\n    if (newMessage.trim() === '') return;\r\n\r\n    currentUser.sendMessage({\r\n      text: newMessage,\r\n      roomId: `${currentRoom.id}`,\r\n    });\r\n\r\n    this.setState({\r\n      newMessage: '',\r\n    });\r\n  }\r\n\r\n  function createPrivateRoom(id) {\r\n    const { currentUser, rooms } = this.state;\r\n    const roomName = `${currentUser.id}_${id}`;\r\n\r\n    const isPrivateChatCreated = rooms.filter(room => {\r\n      if (room.customData && room.customData.isDirectMessage) {\r\n        const arr = [currentUser.id, id];\r\n        const { userIds } = room.customData;\r\n\r\n        if (arr.sort().join('') === userIds.sort().join('')) {\r\n          return {\r\n            room,\r\n          };\r\n        }\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    if (isPrivateChatCreated.length > 0) {\r\n      return Promise.resolve(isPrivateChatCreated[0]);\r\n    }\r\n\r\n    return currentUser.createRoom({\r\n      name: `${roomName}`,\r\n      private: true,\r\n      addUserIds: [`${id}`],\r\n      customData: {\r\n        isDirectMessage: true,\r\n        userIds: [currentUser.id, id],\r\n      },\r\n    });\r\n  }\r\n\r\n  function sendDM(id) {\r\n    createPrivateRoom.call(this, id).then(room => {\r\n      connectToRoom.call(this, room.id);\r\n    });\r\n  }\r\n\r\n  export { handleInput, connectToRoom, connectToChatkit, sendMessage, sendDM }","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nconst RoomList = props => {\r\n      const { rooms, currentRoom, connectToRoom, currentUser } = props;\r\n      const roomList = rooms.map(room => {\r\n        const roomIcon = !room.isPrivate ? '🌐' : '🔒';\r\n        const isRoomActive = room.id === currentRoom.id ? 'active' : '';\r\n\r\n        return (\r\n          <li\r\n            className={isRoomActive}\r\n            key={room.id}\r\n            onClick={() => connectToRoom(room.id)}\r\n          >\r\n            <span className=\"room-icon\">{roomIcon}</span>\r\n            {room.customData && room.customData.isDirectMessage ? (\r\n              <span className=\"room-name\">\r\n                {room.customData.userIds.filter(id => id !== currentUser.id)[0]}\r\n              </span>\r\n            ) : (\r\n              <span className=\"room-name\">{room.name}</span>\r\n            )}\r\n          </li>\r\n        );\r\n      });\r\n      return (\r\n        <div className=\"rooms\">\r\n          <ul className=\"chat-rooms\">{roomList}</ul>\r\n        </div>\r\n      );\r\n    };\r\n\r\nRoomList.propTypes = {\r\n      rooms: Proptypes.array.isRequired,\r\n      currentRoom: Proptypes.object.isRequired,\r\n      connectToRoom: Proptypes.func.isRequired,\r\n      currentUser: Proptypes.object.isRequired,\r\n    };\r\n\r\nexport default RoomList;","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\n\r\nconst ChatSession = props => {\r\n      const { messages } = props;\r\n      return messages.map(message => {\r\n        const time = format(new Date(`${message.updatedAt}`), 'HH:mm');\r\n\r\n        return (\r\n          <li className=\"message\" key={message.id}>\r\n            <div>\r\n              <span className=\"user-id\">{message.senderId}</span>\r\n              <span>{message.text}</span>\r\n            </div>\r\n            <span className=\"message-time\">{time}</span>\r\n          </li>\r\n        );\r\n      });\r\n    };\r\n\r\nChatSession.propTypes = {\r\n      messages: Proptypes.arrayOf(Proptypes.object).isRequired,\r\n    };\r\n\r\nexport default ChatSession;","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nconst RoomUsers = props => {\r\n      const { roomUsers, sendDM, currentUser } = props;\r\n      const users = roomUsers.map(user => {\r\n        return (\r\n          <li className=\"room-member\" key={user.id}>\r\n            <div>\r\n              <span className={`presence ${user.presence.state}`} />\r\n              <span>{user.name}</span>\r\n            </div>\r\n            {currentUser.id !== user.id ? (\r\n              <button\r\n                onClick={() => sendDM(user.id)}\r\n                title={`Send ${user.name} a direct message`}\r\n                className=\"send-dm\"\r\n              >\r\n                +\r\n              </button>\r\n            ) : null}\r\n          </li>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div className=\"room-users\">\r\n          <ul>{users}</ul>\r\n        </div>\r\n      );\r\n    };\r\n\r\nRoomUsers.propTypes = {\r\n      roomUsers: Proptypes.array.isRequired,\r\n      sendDM: Proptypes.func.isRequired,\r\n      currentUser: Proptypes.object.isRequired,\r\n    };\r\n\r\nexport default RoomUsers;","import React, { Component } from \"react\";\r\nimport { handleInput, connectToChatkit, connectToRoom, sendMessage, sendDM } from './methods';\r\nimport RoomList from './RoomList';\r\nimport ChatSession from './ChatSession';\r\nimport RoomUsers from './RoomUsers';\r\nimport \"./chat.css\";\r\n\r\nclass Connect extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          userId: '',\r\n          showLogin: true,\r\n          isLoading: false,\r\n          currentUser: null,\r\n          currentRoom: null,\r\n          rooms: [],\r\n          roomUsers: [],\r\n          roomName: null,\r\n          messages: [],\r\n          newMessage: '',\r\n        };\r\n\r\n        this.handleInput = handleInput.bind(this);\r\n        this.connectToChatkit = connectToChatkit.bind(this);\r\n        this.connectToRoom = connectToRoom.bind(this);\r\n        this.sendMessage = sendMessage.bind(this);\r\n        this.sendDM = sendDM.bind(this);\r\n      }\r\n\r\n      componentDidMount(){\r\n        let user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n        let username = user.username\r\n\r\n        this.connectToChatkit(username);\r\n      }\r\n\r\n      render() {\r\n        const {\r\n          userId,\r\n          showLogin,\r\n          rooms,\r\n          currentRoom,\r\n          currentUser,\r\n          messages,\r\n          newMessage,\r\n          roomUsers,\r\n          roomName,\r\n        } = this.state;\r\n\r\n        return (\r\n          <div className=\"App\">\r\n            <aside className=\"sidebar left-sidebar\">\r\n                {currentUser ? (\r\n                    <div className=\"user-profile\">\r\n                        <span className=\"user-id\">{`${currentUser.id}`}</span>\r\n                    </div>\r\n                ) : null}\r\n\r\n                {currentRoom ? (\r\n                <RoomList\r\n                  rooms={rooms}\r\n                  currentRoom={currentRoom}\r\n                  connectToRoom={this.connectToRoom}\r\n                  currentUser={currentUser}\r\n                />\r\n              ) : null}\r\n            </aside>\r\n            <section className=\"chat-screen\">\r\n              <header className=\"chat-header\">\r\n                {currentRoom ? <h3>{roomName}</h3> : null}\r\n              </header>\r\n              <ul className=\"chat-messages\">\r\n                <ChatSession messages={messages} />\r\n              </ul>\r\n              <footer className=\"chat-footer\">\r\n                <form onSubmit={this.sendMessage} className=\"message-form\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    name=\"newMessage\"\r\n                    className=\"message-input\"\r\n                    placeholder=\"Type your message and hit ENTER to send\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </form>\r\n              </footer>\r\n            </section>\r\n            <aside className=\"sidebar right-sidebar\">\r\n\r\n                {currentRoom ? (\r\n                    <RoomUsers\r\n                    currentUser={currentUser}\r\n                    sendDM={this.sendDM}\r\n                    roomUsers={roomUsers}\r\n                    />\r\n                ) : null}\r\n\r\n                {/* {showLogin ? (\r\n                    <Dialog\r\n                    userId={userId}\r\n                    handleInput={this.handleInput}\r\n                    connectToChatkit={this.connectToChatkit}\r\n                    />\r\n                ) : null} */}\r\n            </aside>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Connect","import React, { Component } from \"react\";\r\nimport axios from \"../utils/axiosInstance\"\r\n\r\nclass Reset extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.user()\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let password = this.state.password\r\n\r\n        axios.post(`${process.env.REACT_APP_API}/auth/reset-password?token=${this.props.match.params.token}`, {password})\r\n        .then(response=>{\r\n            this.props.history.push(\"/auth/login\")\r\n        })\r\n        .catch(error=>console.log(error))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"d-flex flex-column align-items-center justify-content-center reset-div\">\r\n            <form method=\"POST\" onSubmit={this.submitHandler} className=\"border border-dark rounded d-flex flex-column align-items-center justify-content-around ml-3 mr-n3 p-3 bg-light\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">\r\n                    <span className=\"text-danger font-weight-bold lead\">Password <sup>*</sup>8 characters, at least 1 number and 1 letter</span>\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" onChange={this.changeHandler} pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\r\n                           value={this.state.password} placeholder=\"Your New Password\" class=\"form-control\" required/>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" id=\"reset-btn\">Reset Password</button>\r\n            </form>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reset","import React, { Component } from \"react\";\r\nimport axios from \"../utils/axiosInstance\"\r\n\r\nclass SendReset extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            email: \"\",\r\n            successMessage: \"\"\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.user()\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let email = this.state.email\r\n\r\n        axios.post(`${process.env.REACT_APP_API}/auth/send-reset`, {email})\r\n        .then(response=>{\r\n            debugger\r\n            this.setState({\r\n                successMessage: response.data\r\n            })\r\n        })\r\n        .catch(error=>console.log(error))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"d-flex flex-column align-items-center justify-content-center send-div\">\r\n            <form method=\"POST\" onSubmit={this.submitHandler} className=\"border border-dark rounded d-flex flex-column align-items-center justify-content-around ml-3 mr-n3 p-3 bg-light\">\r\n                <div>\r\n                    <h1 className=\"text-success font-weight-bold\">Reset Your Password Here!</h1>\r\n                </div>\r\n                <div>\r\n                    <p id=\"display\" className=\"text-center text-warning\">{this.state.successMessage}</p>\r\n                </div>\r\n                <div>\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Your email\" className=\"ml-3 mb-3\" onChange={this.changeHandler} required/><br/>\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" id=\"send-btn\">Send Reset Link</button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendReset","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Event from \"./components/events\";\nimport Detail from \"./components/detail\";\nimport Signup from \"./components/signup\";\nimport Login from \"./components/login\";\nimport Base from \"./components/index\";\nimport Nav from \"./components/nav\";\nimport {withRouter} from \"react-router-dom\";\nimport Favorite from \"./components/favorites\";\nimport Connect from \"./components/chat/connect\";\nimport Reset from \"./components/resetPassword\";\nimport SendReset from \"./components/sendReset\";\n\nconst PrivateRoute = ({ component: Component, loggedIn, ...rest }) => (\n  \n  <Route {...rest} render={(props) => (\n        loggedIn ? (\n            <Component {...props} {...rest}/>\n        ) : (\n          <Redirect to=\"/auth/login\"/>\n        )\n  )}/>\n)\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state= {\n      loggedIn: !!localStorage.getItem(\"user\")\n    }\n  }\n\n  checkForUserStatus = () => {\n    if(localStorage.getItem(\"user\")){\n      this.setState({\n        loggedIn: true\n      })\n    } else {\n      this.setState({\n        loggedIn: false\n      })\n    }\n  }\n\n  navDisplay = () => {\n    let resetRoute = \"/auth/reset-password\"\n    let path = this.props.location.pathname\n\n    if(this.props.location.pathname === \"/\" || this.props.location.pathname === \"/home\" || this.props.location.pathname === \"/auth/signup\" || this.props.location.pathname === \"/auth/login\" || path.indexOf(resetRoute) >= 0 || this.props.location.pathname === \"/auth/send-reset\"){\n      return true\n    }\n  }\n\n  render(){\n\n    return (\n      <>\n      {this.navDisplay() ? null : <Nav/>}\n        <Route path=\"/\" exact render={(routeProps)=> <Base {...routeProps} user={this.checkForUserStatus}/>}/>\n        <PrivateRoute path=\"/home\" exact component={Home} loggedIn={this.state.loggedIn}/>\n        <PrivateRoute path=\"/events/:id\" exact component={Event} loggedIn={this.state.loggedIn}/>\n        <PrivateRoute path=\"/event-details/:id\" exact component={Detail} loggedIn={this.state.loggedIn}/>\n        <PrivateRoute path=\"/favorites\" exact component={Favorite} loggedIn={this.state.loggedIn}/>\n        <PrivateRoute path=\"/connect\" exact component={Connect} loggedIn={this.state.loggedIn}/>\n        <Route path=\"/auth/signup\" exact render={(routeProps)=> <Signup {...routeProps} user={this.checkForUserStatus}/>}/>\n        <Route path=\"/auth/send-reset\" exact render={(routeProps)=> <SendReset {...routeProps} user={this.checkForUserStatus}/>}/>\n        <Route path=\"/auth/reset-password/:token\" exact render={(routeProps)=> <Reset {...routeProps} user={this.checkForUserStatus}/>}/>\n        <Route path=\"/auth/login\" exact render={(routeProps)=> <Login {...routeProps} user={this.checkForUserStatus}/>}/>\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router>\n    <App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}